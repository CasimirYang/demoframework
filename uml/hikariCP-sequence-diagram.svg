<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1569px" preserveAspectRatio="none" style="width:2874px;height:1569px;background:#EEEBDC;" version="1.1" viewBox="0 0 2874 1569" width="2874px" zoomAndPan="magnify"><defs><filter height="300%" id="ft2c2tcycwxpv" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="245" x="1313.75" y="26.0439">HikariCP DataSource init Sequence</text><rect fill="#DDDDDD" height="1520.9248" style="stroke: #A80036; stroke-width: 1.0;" width="1720" x="149" y="37.1201"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="54" x="982" y="52.0181">hikariCP</text><rect fill="#FFFFFF" filter="url(#ft2c2tcycwxpv)" height="1384.1758" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="212" y="106.9946"/><rect fill="#FFFFFF" filter="url(#ft2c2tcycwxpv)" height="1184.4038" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="446" y="262.0122"/><rect fill="#FFFFFF" filter="url(#ft2c2tcycwxpv)" height="618.3335" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="1004" y="293.7666"/><rect fill="#FFFFFF" filter="url(#ft2c2tcycwxpv)" height="355.5439" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="2068.5" y="556.5562"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="217" x2="217" y1="96.9946" y2="1516.9248"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="451" x2="451" y1="96.9946" y2="1516.9248"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="1008.5" x2="1008.5" y1="96.9946" y2="1516.9248"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="1647" x2="1647" y1="96.9946" y2="1516.9248"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="1788" x2="1788" y1="96.9946" y2="1516.9248"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="2073.5" x2="2073.5" y1="96.9946" y2="1516.9248"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="2307.5" x2="2307.5" y1="96.9946" y2="1516.9248"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="2619.5" x2="2619.5" y1="96.9946" y2="1516.9248"/><rect fill="#FEFECE" filter="url(#ft2c2tcycwxpv)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="124" x="153" y="58.8745"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="110" x="160" y="81.9185">HikariDataSource</text><rect fill="#FEFECE" filter="url(#ft2c2tcycwxpv)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="124" x="153" y="1515.9248"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="110" x="160" y="1538.9688">HikariDataSource</text><rect fill="#FEFECE" filter="url(#ft2c2tcycwxpv)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="108" x="395" y="58.8745"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="94" x="402" y="81.9185">pool.HikariPool</text><rect fill="#FEFECE" filter="url(#ft2c2tcycwxpv)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="108" x="395" y="1515.9248"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="94" x="402" y="1538.9688">pool.HikariPool</text><rect fill="#FEFECE" filter="url(#ft2c2tcycwxpv)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="105" x="954.5" y="58.8745"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="91" x="961.5" y="81.9185">pool.PoolBase</text><rect fill="#FEFECE" filter="url(#ft2c2tcycwxpv)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="105" x="954.5" y="1515.9248"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="91" x="961.5" y="1538.9688">pool.PoolBase</text><rect fill="#FEFECE" filter="url(#ft2c2tcycwxpv)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="106" x="1592" y="58.8745"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="92" x="1599" y="81.9185">pool.PoolEntry</text><rect fill="#FEFECE" filter="url(#ft2c2tcycwxpv)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="106" x="1592" y="1515.9248"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="92" x="1599" y="1538.9688">pool.PoolEntry</text><rect fill="#FEFECE" filter="url(#ft2c2tcycwxpv)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="149" x="1712" y="58.8745"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="135" x="1719" y="81.9185">util.DriverDataSource</text><rect fill="#FEFECE" filter="url(#ft2c2tcycwxpv)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="149" x="1712" y="1515.9248"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="135" x="1719" y="1538.9688">util.DriverDataSource</text><rect fill="#FEFECE" filter="url(#ft2c2tcycwxpv)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="160" x="1991.5" y="58.8745"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="146" x="1998.5" y="81.9185">java.sql.DriverManager</text><rect fill="#FEFECE" filter="url(#ft2c2tcycwxpv)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="160" x="1991.5" y="1515.9248"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="146" x="1998.5" y="1538.9688">java.sql.DriverManager</text><rect fill="#FEFECE" filter="url(#ft2c2tcycwxpv)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="158" x="2226.5" y="58.8745"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="144" x="2233.5" y="81.9185">java.util.ServiceLoader</text><rect fill="#FEFECE" filter="url(#ft2c2tcycwxpv)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="158" x="2226.5" y="1515.9248"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="144" x="2233.5" y="1538.9688">java.util.ServiceLoader</text><rect fill="#FEFECE" filter="url(#ft2c2tcycwxpv)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="152" x="2541.5" y="58.8745"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="138" x="2548.5" y="81.9185">com.mysql.jdbc.Driver</text><rect fill="#FEFECE" filter="url(#ft2c2tcycwxpv)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="152" x="2541.5" y="1515.9248"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="138" x="2548.5" y="1538.9688">com.mysql.jdbc.Driver</text><rect fill="#FFFFFF" filter="url(#ft2c2tcycwxpv)" height="1384.1758" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="212" y="106.9946"/><rect fill="#FFFFFF" filter="url(#ft2c2tcycwxpv)" height="1184.4038" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="446" y="262.0122"/><rect fill="#FFFFFF" filter="url(#ft2c2tcycwxpv)" height="618.3335" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="1004" y="293.7666"/><rect fill="#FFFFFF" filter="url(#ft2c2tcycwxpv)" height="355.5439" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="2068.5" y="556.5562"/><path d="M8,111.9946 L8,138.9946 L203,138.9946 L203,121.9946 L193,111.9946 L8,111.9946 " fill="#FBFB77" filter="url(#ft2c2tcycwxpv)" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M193,111.9946 L193,121.9946 L203,121.9946 L193,111.9946 " fill="#FBFB77" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="174" x="14" y="131.8926">new HikariDataSource(config);</text><line style="stroke: #A80036; stroke-width: 1.0;" x1="222" x2="264" y1="172.5034" y2="172.5034"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="264" x2="264" y1="172.5034" y2="185.5034"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="223" x2="264" y1="185.5034" y2="185.5034"/><polygon fill="#A80036" points="233,181.5034,223,185.5034,233,189.5034,229,185.5034" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="99" x="229" y="167.647">校验config的参数</text><line style="stroke: #A80036; stroke-width: 1.0;" x1="222" x2="264" y1="217.2578" y2="217.2578"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="264" x2="264" y1="217.2578" y2="230.2578"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="223" x2="264" y1="230.2578" y2="230.2578"/><polygon fill="#A80036" points="233,226.2578,223,230.2578,233,234.2578,229,230.2578" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="229" y="212.4014">属性设置</text><polygon fill="#A80036" points="434,258.0122,444,262.0122,434,266.0122,438,262.0122" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="222" x2="440" y1="262.0122" y2="262.0122"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="114" x="229" y="257.1558">new pool.HikariPool</text><polygon fill="#A80036" points="992,289.7666,1002,293.7666,992,297.7666,996,293.7666" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="456" x2="998" y1="293.7666" y2="293.7666"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="121" x="463" y="288.9102">invodke super(config)</text><line style="stroke: #A80036; stroke-width: 1.0;" x1="1014" x2="1056" y1="325.521" y2="325.521"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1056" x2="1056" y1="325.521" y2="338.521"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1015" x2="1056" y1="338.521" y2="338.521"/><polygon fill="#A80036" points="1025,334.521,1015,338.521,1025,342.521,1021,338.521" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="119" x="1021" y="320.6646">initializeDataSource:</text><path d="M1019,351.521 L1019,432.521 L1370,432.521 L1370,361.521 L1360,351.521 L1019,351.521 " fill="#FBFB77" filter="url(#ft2c2tcycwxpv)" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1360,351.521 L1360,361.521 L1370,361.521 L1360,351.521 " fill="#FBFB77" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="63" x="1025" y="371.4189">1.属性设置</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="326" x="1029" y="389.1733">2.根据dsClassName,jdbcUrl,JNDI的顺序获取DataSource</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="110" x="1029" y="406.9277">3.set LoginTimeout</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="149" x="1029" y="424.6821">4.set netTimeoutExecutor</text><path d="M1019,446.5386 L1019,473.5386 L1474,473.5386 L1474,456.5386 L1464,446.5386 L1019,446.5386 " fill="#FBFB77" filter="url(#ft2c2tcycwxpv)" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1464,446.5386 L1464,456.5386 L1474,456.5386 L1464,446.5386 " fill="#FBFB77" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="434" x="1025" y="466.4365">根据设置的DataSourceClassName,jdbcUrl,DataSourceJNDI的顺序进行加载</text><polygon fill="#A80036" points="1776.5,520.8018,1786.5,524.8018,1776.5,528.8018,1780.5,524.8018" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1014" x2="1782.5" y1="524.8018" y2="524.8018"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="96" x="1021" y="502.1909">使用jdbcUrl方式:</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="541" x="1025" y="519.9453">new DriverDataSource(jdbcUrl, driverClassName, dataSourceProperties, username, password)</text><polygon fill="#A80036" points="2056.5,552.5562,2066.5,556.5562,2056.5,560.5562,2060.5,556.5562" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1788.5" x2="2062.5" y1="556.5562" y2="556.5562"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="230" x="1795.5" y="551.6997">driver = DriverManager.getDriver(jdbcUrl)</text><line style="stroke: #A80036; stroke-width: 1.0;" x1="2078.5" x2="2120.5" y1="588.3105" y2="588.3105"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2120.5" x2="2120.5" y1="588.3105" y2="601.3105"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2079.5" x2="2120.5" y1="601.3105" y2="601.3105"/><polygon fill="#A80036" points="2089.5,597.3105,2079.5,601.3105,2089.5,605.3105,2085.5,601.3105" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="65" x="2085.5" y="583.4541">触发类加载</text><line style="stroke: #A80036; stroke-width: 1.0;" x1="2078.5" x2="2120.5" y1="633.0649" y2="633.0649"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2120.5" x2="2120.5" y1="633.0649" y2="646.0649"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2079.5" x2="2120.5" y1="646.0649" y2="646.0649"/><polygon fill="#A80036" points="2089.5,642.0649,2079.5,646.0649,2089.5,650.0649,2085.5,646.0649" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="210" x="2085.5" y="628.2085">静态代码块执行loadInitialDrivers方法</text><polygon fill="#A80036" points="2295.5,673.8193,2305.5,677.8193,2295.5,681.8193,2299.5,677.8193" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2078.5" x2="2301.5" y1="677.8193" y2="677.8193"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="184" x="2085.5" y="672.9629">ServiceLoader.load(Driver.class)</text><line style="stroke: #A80036; stroke-width: 1.0;" x1="2307.5" x2="2349.5" y1="709.5737" y2="709.5737"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2349.5" x2="2349.5" y1="709.5737" y2="722.5737"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2308.5" x2="2349.5" y1="722.5737" y2="722.5737"/><polygon fill="#A80036" points="2318.5,718.5737,2308.5,722.5737,2318.5,726.5737,2314.5,722.5737" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="298" x="2314.5" y="704.7173">使用currentThread的contextClassLoader进行类加载</text><polygon fill="#A80036" points="2607.5,750.3281,2617.5,754.3281,2607.5,758.3281,2611.5,754.3281" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2307.5" x2="2613.5" y1="754.3281" y2="754.3281"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="65" x="2314.5" y="749.4717">触发类加载</text><line style="stroke: #A80036; stroke-width: 1.0;" x1="2619.5" x2="2661.5" y1="803.8369" y2="803.8369"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2661.5" x2="2661.5" y1="803.8369" y2="816.8369"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2620.5" x2="2661.5" y1="816.8369" y2="816.8369"/><polygon fill="#A80036" points="2630.5,812.8369,2620.5,816.8369,2630.5,820.8369,2626.5,816.8369" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="130" x="2626.5" y="781.2261">静态代码块执行注册：</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="236" x="2626.5" y="798.9805">DriverManager.registerDriver(new Driver())</text><polygon fill="#A80036" points="2089.5,844.5913,2079.5,848.5913,2089.5,852.5913,2085.5,848.5913" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" x1="2083.5" x2="2618.5" y1="848.5913" y2="848.5913"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="139" x="2095.5" y="843.7349">注册到 registeredDrivers</text><polygon fill="#A80036" points="1799.5,876.3457,1789.5,880.3457,1799.5,884.3457,1795.5,880.3457" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" x1="1793.5" x2="2067.5" y1="880.3457" y2="880.3457"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="256" x="1805.5" y="875.4893">从注册的registeredDrivers中返回合适的driver</text><polygon fill="#A80036" points="1020,908.1001,1010,912.1001,1020,916.1001,1016,912.1001" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" x1="1014" x2="1787.5" y1="912.1001" y2="912.1001"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="118" x="1026" y="907.2437">set dadaSource field</text><polygon fill="#A80036" points="997,939.8545,1007,943.8545,997,947.8545,1001,943.8545" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" x1="456" x2="1003" y1="943.8545" y2="943.8545"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="297" x="463" y="938.998">根据InitializationFailTimeout需要是否new PoolEntry</text><line style="stroke: #A80036; stroke-width: 1.0;" x1="1009" x2="1051" y1="1064.3809" y2="1064.3809"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1051" x2="1051" y1="1064.3809" y2="1077.3809"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1010" x2="1051" y1="1077.3809" y2="1077.3809"/><polygon fill="#A80036" points="1020,1073.3809,1010,1077.3809,1020,1081.3809,1016,1077.3809" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="88" x="1016" y="970.7524">newConnection</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="172" x="1024" y="988.5068">1.dataSource.getConnection()</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="108" x="1024" y="1006.2612">2.setupConnection</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="502" x="1024" y="1024.0156">2.1设置validationTimeout，isReadOnly，isAutoCommit，transactionIsolation，schema</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="612" x="1024" y="1041.77">2.2 Execute isValid() or connection test query. 如果驱动支持JDBC4，HikariCP 强烈建议使用JDBC4做test</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="322" x="1024" y="1059.5244">2.3 执行ConnectionInitSql 如果已经配置（默认没配置）</text><polygon fill="#A80036" points="1635,1105.1353,1645,1109.1353,1635,1113.1353,1639,1109.1353" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1009" x2="1641" y1="1109.1353" y2="1109.1353"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="183" x="1016" y="1104.2788">new PoolEntry(connection,pool)</text><polygon fill="#A80036" points="467,1136.8896,457,1140.8896,467,1144.8896,463,1140.8896" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" x1="461" x2="1646" y1="1140.8896" y2="1140.8896"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="55" x="473" y="1136.0332">poolEntry</text><line style="stroke: #A80036; stroke-width: 1.0;" x1="456" x2="498" y1="1172.644" y2="1172.644"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="498" x2="498" y1="1172.644" y2="1185.644"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="457" x2="498" y1="1185.644" y2="1185.644"/><polygon fill="#A80036" points="467,1181.644,457,1185.644,467,1189.644,463,1185.644" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="262" x="463" y="1167.7876">poolEntry在lifetime后执行softEvictConnection</text><line style="stroke: #A80036; stroke-width: 1.0;" x1="456" x2="498" y1="1217.3984" y2="1217.3984"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="498" x2="498" y1="1217.3984" y2="1230.3984"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="457" x2="498" y1="1230.3984" y2="1230.3984"/><polygon fill="#A80036" points="467,1226.3984,457,1230.3984,467,1234.3984,463,1230.3984" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="91" x="463" y="1212.542">registerMBeans</text><line style="stroke: #A80036; stroke-width: 1.0;" x1="456" x2="498" y1="1262.1528" y2="1262.1528"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="498" x2="498" y1="1262.1528" y2="1275.1528"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="457" x2="498" y1="1275.1528" y2="1275.1528"/><polygon fill="#A80036" points="467,1271.1528,457,1275.1528,467,1279.1528,463,1275.1528" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="534" x="463" y="1257.2964">初始化addConnectionExecutor给后续使用（用来 createPoolEntry &amp; add to connectionBag）</text><line style="stroke: #A80036; stroke-width: 1.0;" x1="456" x2="498" y1="1306.9072" y2="1306.9072"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="498" x2="498" y1="1306.9072" y2="1319.9072"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="457" x2="498" y1="1319.9072" y2="1319.9072"/><polygon fill="#A80036" points="467,1315.9072,457,1319.9072,467,1323.9072,463,1319.9072" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="499" x="463" y="1302.0508">初始化closeConnectionExecutor给后续使用（用来 quietlyCloseConnection &amp; fillPool）</text><line style="stroke: #A80036; stroke-width: 1.0;" x1="456" x2="498" y1="1351.6616" y2="1351.6616"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="498" x2="498" y1="1351.6616" y2="1364.6616"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="457" x2="498" y1="1364.6616" y2="1364.6616"/><polygon fill="#A80036" points="467,1360.6616,457,1364.6616,467,1368.6616,463,1364.6616" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="260" x="463" y="1346.8052">开启定时任务HouseKeeper维护最小空闲连接</text><line style="stroke: #A80036; stroke-width: 1.0;" x1="456" x2="498" y1="1396.416" y2="1396.416"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="498" x2="498" y1="1396.416" y2="1409.416"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="457" x2="498" y1="1409.416" y2="1409.416"/><polygon fill="#A80036" points="467,1405.416,457,1409.416,467,1413.416,463,1409.416" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="268" x="463" y="1391.5596">初始化泄露检查工厂类 ProxyLeakTaskFactory</text><line style="stroke: #A80036; stroke-width: 1.0;" x1="456" x2="498" y1="1446.1704" y2="1446.1704"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="498" x2="498" y1="1446.1704" y2="1459.1704"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="451" x2="498" y1="1459.1704" y2="1459.1704"/><polygon fill="#A80036" points="461,1455.1704,451,1459.1704,461,1463.1704,457,1459.1704" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="252" x="463" y="1441.314">根据InitializationFailTimeout配置等待初始化</text><line style="stroke: #A80036; stroke-width: 1.0;" x1="222" x2="264" y1="1490.9248" y2="1490.9248"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="264" x2="264" y1="1490.9248" y2="1503.9248"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="217" x2="264" y1="1503.9248" y2="1503.9248"/><polygon fill="#A80036" points="227,1499.9248,217,1503.9248,227,1507.9248,223,1503.9248" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="210" x="229" y="1486.0684">标记seal= true 标记DS已经成功启动</text><!--
@startuml
skinparam backgroundColor #EEEBDC

title HikariCP DataSource init Sequence



box "hikariCP"
participant HikariDataSource
participant pool.HikariPool
participant pool.PoolBase
participant pool.PoolEntry
note left of HikariDataSource:new HikariDataSource(config);
activate HikariDataSource
HikariDataSource -> HikariDataSource: 校验config的参数
HikariDataSource -> HikariDataSource: 属性设置

HikariDataSource->pool.HikariPool: new pool.HikariPool
activate pool.HikariPool
pool.HikariPool->pool.PoolBase: invodke super(config)
activate pool.PoolBase
pool.PoolBase->pool.PoolBase: initializeDataSource:
note right of pool.PoolBase:  1.属性设置 \n 2.根据dsClassName,jdbcUrl,JNDI的顺序获取DataSource\n 3.set LoginTimeout \n 4.set netTimeoutExecutor
note right of pool.PoolBase: 根据设置的DataSourceClassName,jdbcUrl,DataSourceJNDI的顺序进行加载
pool.PoolBase->util.DriverDataSource: 使用jdbcUrl方式: \n new DriverDataSource(jdbcUrl, driverClassName, dataSourceProperties, username, password)
end box

util.DriverDataSource->"java.sql.DriverManager" : driver = DriverManager.getDriver(jdbcUrl)

activate "java.sql.DriverManager"
"java.sql.DriverManager" -> "java.sql.DriverManager": 触发类加载
"java.sql.DriverManager" -> "java.sql.DriverManager": 静态代码块执行loadInitialDrivers方法
"java.sql.DriverManager" -> java.util.ServiceLoader: ServiceLoader.load(Driver.class)
java.util.ServiceLoader -> java.util.ServiceLoader: 使用currentThread的contextClassLoader进行类加载

"java.util.ServiceLoader" -> "com.mysql.jdbc.Driver":触发类加载
"com.mysql.jdbc.Driver" -> "com.mysql.jdbc.Driver": 静态代码块执行注册：\nDriverManager.registerDriver(new Driver())
"com.mysql.jdbc.Driver" - -> "java.sql.DriverManager": 注册到 registeredDrivers
"java.sql.DriverManager" - -> util.DriverDataSource: 从注册的registeredDrivers中返回合适的driver
util.DriverDataSource - -> pool.PoolBase: set dadaSource field
deactivate "java.sql.DriverManager"
deactivate pool.PoolBase

pool.HikariPool- -> pool.PoolBase: 根据InitializationFailTimeout需要是否new PoolEntry
pool.PoolBase-> pool.PoolBase: newConnection\n  1.dataSource.getConnection()\n  2.setupConnection \n  2.1设置validationTimeout，isReadOnly，isAutoCommit，transactionIsolation，schema\n  2.2 Execute isValid() or connection test query. 如果驱动支持JDBC4，HikariCP 强烈建议使用JDBC4做test \n  2.3 执行ConnectionInitSql 如果已经配置（默认没配置）
pool.PoolBase-> pool.PoolEntry:new PoolEntry(connection,pool)
pool.PoolEntry- ->pool.HikariPool:poolEntry
pool.HikariPool -> pool.HikariPool: poolEntry在lifetime后执行softEvictConnection


pool.HikariPool->pool.HikariPool: registerMBeans

pool.HikariPool->pool.HikariPool: 初始化addConnectionExecutor给后续使用（用来 createPoolEntry & add to connectionBag）
pool.HikariPool->pool.HikariPool: 初始化closeConnectionExecutor给后续使用（用来 quietlyCloseConnection & fillPool）

pool.HikariPool->pool.HikariPool: 开启定时任务HouseKeeper维护最小空闲连接
pool.HikariPool->pool.HikariPool: 初始化泄露检查工厂类 ProxyLeakTaskFactory
pool.HikariPool->pool.HikariPool: 根据InitializationFailTimeout配置等待初始化

deactivate pool.HikariPool

HikariDataSource -> HikariDataSource: 标记seal= true 标记DS已经成功启动
deactivate HikariDataSource
@enduml

PlantUML version 1.2018.11(Sun Sep 23 00:43:53 CST 2018)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 1.8.0_152-release-1343-b26
Operating System: Windows 10
OS Version: 10.0
Default Encoding: GBK
Language: zh
Country: CN
--></g></svg>